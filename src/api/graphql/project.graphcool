# project: cj5zswpmnfr6201049umywa1m
# version: 48

type Post implements Node {
  description: String!
  imageUrl: String!
  createdAt: DateTime!
  id: ID! @isUnique
  updatedAt: DateTime!
}

type File implements Node {
  contentType: String!
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  secret: String! @isUnique
  size: Int!
  updatedAt: DateTime!
  url: String! @isUnique
}

type Tutor implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  updatedAt: DateTime!
  students: [Student!]! @relation(name: "TutorOnStudent")
  description: String
  diplomaUrl: String!
  lessons: [Lesson!]! @relation(name: "TutorOnLesson")
  locations: [String!]!
  subjects: [Subject!]! @relation(name: "SubjectOnTutor")
  user: User! @relation(name: "UserOnTutor")
}

type User implements Node {
  createdAt: DateTime!
  firstName: String!
  imageUrl: String
  lastName: String!
  id: ID! @isUnique
  updatedAt: DateTime!
  email: String @isUnique
  isTutor: Boolean! @defaultValue(value: false)
  password: String
  student: Student @relation(name: "UserOnStudent")
  tutor: Tutor @relation(name: "UserOnTutor")
}

type Lesson implements Node {
  cost: Float!
  createdAt: DateTime!
  duration: Int!
  id: ID! @isUnique
  student: Student @relation(name: "StudentOnLesson")
  updatedAt: DateTime!
  user: Tutor @relation(name: "TutorOnLesson")
}

type Student implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  lessons: [Lesson!]! @relation(name: "StudentOnLesson")
  subjects: [Subject!]! @relation(name: "SubjectOnStudent")
  tutor: Tutor @relation(name: "TutorOnStudent")
  updatedAt: DateTime!
  user: User! @relation(name: "UserOnStudent")
}

type Subject implements Node {
  createdAt: DateTime!
  id: ID! @isUnique
  name: String!
  students: [Student!]! @relation(name: "SubjectOnStudent")
  tutors: [Tutor!]! @relation(name: "SubjectOnTutor")
  updatedAt: DateTime!
}