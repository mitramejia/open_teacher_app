// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders a Create Account Screen 1`] = `
<RCTScrollView
  contentInset={
    Object {
      "bottom": 0,
    }
  }
  keyboardDismissMode="interactive"
  keyboardShouldPersistTaps={false}
  showsVerticalScrollIndicator={true}
  style={undefined}
>
  <View>
    <View
      style={undefined}
    >
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#C8C7CC",
              "borderBottomWidth": 1,
              "paddingTop": 35,
            },
            undefined,
          ]
        }
      />
      <View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderBottomColor": "#C8C7CC",
                  "borderBottomWidth": 1,
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
                undefined,
              ],
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            onLayout={[Function]}
            onPress={[Function]}
            style={
              Array [
                Object {
                  "fontSize": 17,
                  "justifyContent": "center",
                  "lineHeight": 32,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                },
                undefined,
              ]
            }
            suppressHighlighting={true}
          >
            First Name
          </Text>
          <TextInput
            containerStyle={
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderBottomColor": "#C8C7CC",
                  "borderBottomWidth": 1,
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
                undefined,
              ]
            }
            fieldRef="first_name"
            helpText={undefined}
            inputStyle={
              Array [
                Object {
                  "paddingLeft": 10,
                  "paddingRight": 10,
                },
                Object {},
                Object {
                  "textAlign": "right",
                },
                undefined,
              ]
            }
            keyboardType={undefined}
            label="First Name"
            labelStyle={
              Array [
                Object {
                  "fontSize": 17,
                  "justifyContent": "center",
                  "lineHeight": 32,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                },
                undefined,
              ]
            }
            onChange={[Function]}
            onFocus={[Function]}
            onValidation={[Function]}
            placeholder="First Name"
            style={
              Array [
                Array [
                  Object {
                    "paddingLeft": 10,
                    "paddingRight": 10,
                  },
                  Object {},
                  Object {
                    "textAlign": "right",
                  },
                  undefined,
                ],
                Object {
                  "height": 44,
                },
              ]
            }
            validationFunction={
              Array [
                [Function],
                [Function],
              ]
            }
            value={undefined}
            width={NaN}
          />
        </View>
      </View>
      <View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderBottomColor": "#C8C7CC",
                  "borderBottomWidth": 1,
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
                undefined,
              ],
            ]
          }
        >
          <TextInput
            containerStyle={
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderBottomColor": "#C8C7CC",
                  "borderBottomWidth": 1,
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
                undefined,
              ]
            }
            fieldRef="last_name"
            inputStyle={
              Array [
                Object {
                  "paddingLeft": 10,
                  "paddingRight": 10,
                },
                Object {},
                Object {},
                undefined,
              ]
            }
            keyboardType={undefined}
            labelStyle={
              Array [
                Object {
                  "fontSize": 17,
                  "justifyContent": "center",
                  "lineHeight": 32,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                },
                undefined,
              ]
            }
            onChange={[Function]}
            onFocus={[Function]}
            onValidation={[Function]}
            placeholder="Last Name"
            style={
              Array [
                Array [
                  Object {
                    "paddingLeft": 10,
                    "paddingRight": 10,
                  },
                  Object {},
                  Object {},
                  undefined,
                ],
                Object {
                  "height": 44,
                },
              ]
            }
            value={undefined}
            width={NaN}
          />
        </View>
      </View>
      <View>
        <View
          onLayout={[Function]}
          style={
            Array [
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderBottomColor": "#C8C7CC",
                  "borderBottomWidth": 1,
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
                undefined,
              ],
            ]
          }
        >
          <TextInput
            containerStyle={
              Array [
                Object {
                  "backgroundColor": "white",
                  "borderBottomColor": "#C8C7CC",
                  "borderBottomWidth": 1,
                  "justifyContent": "center",
                },
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
                undefined,
              ]
            }
            fieldRef="other_input"
            helpText="this is an helpful text it can be also very very long and it will wrap"
            inputStyle={
              Array [
                Object {
                  "paddingLeft": 10,
                  "paddingRight": 10,
                },
                Object {},
                Object {},
                undefined,
              ]
            }
            keyboardType={undefined}
            labelStyle={
              Array [
                Object {
                  "fontSize": 17,
                  "justifyContent": "center",
                  "lineHeight": 32,
                  "paddingLeft": 10,
                  "paddingRight": 10,
                },
                undefined,
              ]
            }
            multiline={false}
            onChange={[Function]}
            onFocus={[Function]}
            onValidation={[Function]}
            placeholder="Other Input"
            style={
              Array [
                Array [
                  Object {
                    "paddingLeft": 10,
                    "paddingRight": 10,
                  },
                  Object {},
                  Object {},
                  undefined,
                ],
                Object {
                  "height": 44,
                },
              ]
            }
            value={undefined}
            width={NaN}
          />
        </View>
        <View
          style={
            Object {
              "marginBottom": 25,
              "marginTop": 9,
              "paddingLeft": 20,
              "paddingRight": 20,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#7a7a7a",
              }
            }
          >
            this is an helpful text it can be also very very long and it will wrap
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#C8C7CC",
              "borderBottomWidth": 1,
              "paddingTop": 35,
            },
            undefined,
          ]
        }
      />
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#000",
          "fontFamily": "System",
          "fontSize": 16,
        }
      }
      uppercase={false}
      virtual={undefined}
    >
      {}
    </Text>
  </View>
</RCTScrollView>
`;
